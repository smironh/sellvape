#1.1 –í—Å—Ç—Ä–µ—á–∞–π—Ç–µ!

#1.2-1.5 - —Ñ–∏–∫—Å –±–∞–≥–æ–≤

#1.6 - –∫–æ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏‚õî
#1.6 - —Å—Ç–∞—Ç—É—Å, –ø—Ä–æ–¥–∞–∂, –∫—É–ø–ª–µ–Ω–æ, —Ä–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–≤—Ü–∞ –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è‚õî

#1.7 - –†–µ—Ñ —Å–∏—Å—Ç–µ–º–∞‚õî

import telebot
from telebot import types

import sqlite3
import random
import config
import time


bot = telebot.TeleBot(config.TOKEN)

admin = config.chat_id

@bot.message_handler(commands=['start'])
def send_welcome(message):
	markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)

	btn1 = types.KeyboardButton("‚ö° –ü—Ä–æ—Ñ–∏–ª—å")
	btn2 = types.KeyboardButton("ü§ë –ü—Ä–æ–¥–∞—Ç—å")
	btn3 = types.KeyboardButton("üí∏ –ö—É–ø–∏—Ç—å")
	btn4 = types.KeyboardButton("‚ù§ –ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏")
	btn5 = types.KeyboardButton("‚õî –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è")

	markup1.add(btn1, btn2, btn3, btn4, btn5)

	with sqlite3.connect('db.db') as db:
		
		cursor = db.cursor()

		cursor.execute("""
			CREATE TABLE IF NOT EXISTS username(
				ID INT,
				name TEXT,
				city TEXT
			)""")
		cursor.execute("""
			CREATE TABLE IF NOT EXISTS vape(
				product TEXT,
				ID INT,
				productID INTEGER PRIMARY KEY,
				seller TEXT
			)
			""")
		cursor.execute("""
			CREATE TABLE IF NOT EXISTS userban(
				ID INT
			)
		""")
		cursor.execute("SELECT * FROM username WHERE ID=?", (message.chat.id, ))
		info = cursor.fetchone()
		print(info)

		if info is None:

			print('yeah')
			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
			button1 = types.KeyboardButton("–ú–æ—Å–∫–≤–∞")
			button2 = types.KeyboardButton('–ü–µ—Ä–º—å')
			button3 = types.KeyboardButton('–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥')
			button4 = types.KeyboardButton('–°–∞–Ω–∫-–ü–∏—Ç–µ—Ä–±—É—Ä–≥')

			markup.add(button1, button2, button3, button4)

			
			#####

			bot.reply_to(message, f"""
–ü—Ä–∏–≤–µ—Ç {message.chat.username} —Ç—ã —Ç—É—Ç —è –≤–∏–∂—É –≤–ø–µ—Ä–≤—ã–µ‚ù§ 

–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–µ –º–µ–Ω—è—Ç—å –∏–º—è –≤–æ –≤—Ä–µ–º—è —Ç–æ–≤–æ –∫–∞–∫ –ø—Ä–æ–¥–∞–µ—Ç–µ –≤–µ–π–ø
		
NEW –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∂–∞–ª–æ–±! –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∏–∑–º–µ–Ω–∏–ª –Ω–∏–∫, —É–∂–µ –ø—Ä–æ–¥–∞–ª —Ç–æ–≤–∞—Ä –∏–ª–∏ –∫–∏–Ω—É–ª —Ç–æ –¥–æ–±–∞–≤–∏–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞ ‚õî –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è
			""")

			msg = bot.reply_to(message, '–î–ª—è –Ω–∞—á–∞–ª–æ –≤–≤–µ–¥–∏—Ç–µ –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –∂–∏–≤–µ—Ç–µ!', reply_markup=markup)
			bot.register_next_step_handler(msg, database)


		else:
			print('none')
			cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
			usrban = cursor.fetchone()

			if usrban is None:

				bot.send_message(message.chat.id, f"""
	–ü—Ä–∏–≤–µ—Ç {message.chat.username}‚ù§

	–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–µ –º–µ–Ω—è—Ç—å –∏–º—è –≤–æ –≤—Ä–µ–º—è —Ç–æ–≤–æ –∫–∞–∫ –ø—Ä–æ–¥–∞–µ—Ç–µ –≤–µ–π–ø

	NEW –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∂–∞–ª–æ–±! –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∏–∑–º–µ–Ω–∏–ª –Ω–∏–∫, —É–∂–µ –ø—Ä–æ–¥–∞–ª —Ç–æ–≤–∞—Ä –∏–ª–∏ –∫–∏–Ω—É–ª —Ç–æ –¥–æ–±–∞–≤–∏–ª–∞—Å—å –∫–Ω–æ–ø–∫–∞ ‚õî –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è
				""", reply_markup=markup1)
			else:
				bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
''')

@bot.message_handler(commands=['help'])
def help(message):
	bot.reply_to(message, '''
/buy - –ö—É–ø–∏—Ç—å
/sell - –ü—Ä–æ–¥–∞—Ç—å

/profile - –ü—Ä–æ—Ñ–∏–ª—å

/mysell - –í –ø—Ä–æ–¥–∞–∂–µ

–°–µ–π—á–∞—Å –±–æ—Ç –Ω–µ –ø–æ–ø—É–ª—è—Ä–µ–Ω –∏ –Ω–∞ –≤–µ—Ä—Å–∏–∏ 1.0, –Ω–æ –µ—Å–ª–∏ –µ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–æ–Ω—è—Ç—å —Ç–æ –≤ –±—É–¥–µ—Ç –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π(—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤)
''')



@bot.message_handler(commands=['sell', 'buy'])
def sell(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()

		cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
		usrban = cursor.fetchone()
		if usrban is None:

			if message.text == '/sell' or message.text == 'ü§ë –ü—Ä–æ–¥–∞—Ç—å':
				msg = bot.reply_to(message, '–ù–∞–ø–∏—à–∏—Ç–µ –æ —Ç–æ–≤–∞—Ä–µ(–Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω—É, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ç–¥)\n/cancellation —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å')
				bot.register_next_step_handler(msg, sel)

			if message.text == '/buy' or message.text == 'üí∏ –ö—É–ø–∏—Ç—å':
				bot.reply_to(message, '–°–µ–π—á–∞—Å –≤–∞–º –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–≥–∞—Ç—Å—è —Ç–æ–≤–∞—Ä—ã')
				buy(message)
		else:
			bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
			''')


@bot.message_handler(commands=['sells'])
def sells(message):
	command = message.text.split(maxsplit=1)[1]
	adm = str(admin)
	chat_id = str(message.chat.id)

	if chat_id != adm:
		bot.reply_to(message, '–°—ä–µ–±–∞–ª—Å—è –≤ —Å—Ç—Ä–∞—Ö–µ –ø–æ–∫–∞ –Ω–µ —É–µ–±–∞–ª')
	else:
		with sqlite3.connect('db.db') as db:
			cursor = db.cursor()

			cursor.execute("SELECT * FROM username WHERE ID=?", (message.chat.id, ))
			city = cursor.fetchone()

			for i in cursor.execute("SELECT * FROM vape WHERE ID=?", (command, )).fetchall():
				bot.reply_to(message, f"""
{i[0]}

–ì–æ—Ä–æ–¥ {city[2]}

–ù–∞–ø–∏—Å–∞—Ç—å - {i[3]}

Product Id - {i[2]}""")

@bot.message_handler(commands=['del'])
def delet(message):
	command = message.text.split(maxsplit=1)[1]

	adm = str(admin)
	chat_id = str(message.chat.id)

	if chat_id != adm:
		bot.reply_to(message, '–°—ä–µ–±–∞–ª—Å—è –≤ —Å—Ç—Ä–∞—Ö–µ –ø–æ–∫–∞ –Ω–µ —É–µ–±–∞–ª')
	else:
		with sqlite3.connect('db.db') as db:
			cursor = db.cursor()
			cursor.execute('DELETE FROM vape WHERE productID=?', (command, ))

			bot.reply_to(message, '–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ')

@bot.message_handler(commands=['mysell'])
def mysell(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()

		cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
		usrban = cursor.fetchone()

		if usrban is None:

			cursor.execute("SELECT * FROM vape WHERE ID=?", (message.chat.id, ))
			info = cursor.fetchone()

			rang = cursor.execute('SELECT COUNT(*) FROM vape WHERE ID=?', (message.chat.id, ))

			cursor.execute("SELECT * FROM username WHERE ID=?", (message.chat.id, ))
			city = cursor.fetchone()

			markup = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å", callback_data='Del')
			markup.add(button1)

			for i in cursor.execute("SELECT * FROM vape WHERE ID=?", (message.chat.id, )).fetchall():
				bot.reply_to(message, f"""
	{i[0]}

	–ì–æ—Ä–æ–¥ {city[2]}

	–ù–∞–ø–∏—Å–∞—Ç—å - {i[3]}

	Product Id - {i[2]}
	""")
			bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å 1 –ø—Ä–æ–¥–∞–∂—É?', reply_markup=markup)
		else:
			bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
''')


@bot.message_handler(commands=['ban'])
def ban(message):
	command = message.text.split(maxsplit=1)[1]
	adm = str(admin)
	chat_id = str(message.chat.id)

	if chat_id != adm:
		bot.reply_to(message, '–°—ä–µ–±–∞–ª—Å—è –≤ —Å—Ç—Ä–∞—Ö–µ –ø–æ–∫–∞ –Ω–µ —É–µ–±–∞–ª')

	else:

		with sqlite3.connect('db.db') as db:
			cursor = db.cursor()

			cursor.execute('INSERT INTO userban(ID)VALUEs(?)', (command, ))
			bot.reply_to(message, f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ —é–∑–µ—Ä–∞ - {command}')

@bot.message_handler(commands=['1'])
def seckret(message):
	command = message.text.split(maxsplit=1)[1]
	
	adm = str(admin)
	chat_id = str(message.chat.id)

	if chat_id != adm:
		bot.reply_to(message, '–°—ä–µ–±–∞–ª—Å—è –≤ —Å—Ç—Ä–∞—Ö–µ –ø–æ–∫–∞ –Ω–µ —É–µ–±–∞–ª')
	else:

		markup = types.InlineKeyboardMarkup()
		button1 = types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è", callback_data='check')
		button2 = types.InlineKeyboardButton("–ó–∞–±–∞–Ω–∏—Ç—å", callback_data='ban')
		markup.add(button1, button2)

		with sqlite3.connect('db.db') as db:
			cursor = db.cursor()
			if command == 'db' or command is None:
				with open("db.db","rb") as file:
					f=file.read()
				bot.send_document(config.chat_id, f,"db.db")
			else:
				if message.chat.id != message.chat.id:
					bot.reply_to(message, '–ü–æ—à–µ–ª –Ω–∞—Ö—É–π')
				else:
					cursor.execute('SELECT * FROM username WHERE ID=?', (command, ))
					user=  cursor.fetchone()
					bot.reply_to(message, f'''
			–ß–µ–ª - @{user[1]}

			–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–¥–∞–∂–∏ - /sells {command}
			–ó–∞–±–∞–Ω–∏—Ç—å - /ban {command}
			''', reply_markup=markup)


@bot.message_handler(commands=['profile'])
def profile(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()

		cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
		usrban = cursor.fetchone()

		if usrban is None:
			cursor = db.cursor()

			markup = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data='changecity')
			markup.add(button1)

			cursor.execute("SELECT city FROM username WHERE ID=?", (message.chat.id, ))
			result = cursor.fetchone()
			
			cursor.execute('SELECT COUNT(product) FROM vape WHERE ID=?', (message.chat.id, ))
			rang = cursor.fetchone()

			bot.reply_to(message , f"""
	–í–∞—à –Ω–∏–∫ - {message.chat.username}
	–í–∞—à ID - {message.chat.id}
	–ì–æ—Ä–æ–¥ - {result[0]}

	–°–µ–π—á–∞—Å –≤ –ø—Ä–æ–¥–∞–∂–µ - {rang[0]}

	–ü—Ä–æ–¥–∞–∂ - Soon
	–ö—É–ø–ª–µ–Ω–æ - Soon

	–†–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü–∞ - Soon
	""", reply_markup=markup)
		else:
			bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
''')

def buy(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()

		cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
		usrban = cursor.fetchone()
		if usrban is None:
			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
			button1 = types.KeyboardButton("‚è© –î–∞–ª–µ–µ")
			button2 = types.KeyboardButton('‚ùå –í—ã–π—Ç–∏')
			markup.add(button1, button2)

			with sqlite3.connect('db.db') as db:
				cursor = db.cursor()


				cursor.execute('SELECT * FROM vape ORDER BY RANDOM() LIMIT 1;')
				info = cursor.fetchone()

				cursor.execute('SELECT * FROM username WHERE ID = ?', (info[1],))
				info2 = cursor.fetchone()

				
				try:

					bot.send_message(message.chat.id,  f"""
				{info[0]}

				–í –≥–æ—Ä–æ–¥–µ {info2[2]}

				–ù–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É - @{info[3]}

				Product ID - {info[2]}
				""", reply_markup=markup)
				except:
					bot.reply_to(message, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! ProductID - {info[2]} –î–ª—è –∂–∞–ª–∞–±—ã')
		else:
			bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
''')


def sel(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()

		cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
		usrban = cursor.fetchone()
		if usrban is None:

			if message.text == '/cancellation':
				bot.reply_to(message, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
			else:
				with sqlite3.connect('db.db') as db:
					cursor = db.cursor()

					data = [
						(message.text, message.chat.id, message.chat.username)
					]

					cursor.executemany('INSERT INTO vape(product, ID, seller)VALUEs(?, ?, ?)', data)

					bot.reply_to(message, '–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ª–æ–∂–∏–ª–∏ —Å–≤–æ–π —Ç–æ–≤–∞—Ä! –ñ–¥–∏—Ç–µ –ø–æ–∫–∞ –≤–∞–º –Ω–∞–ø–∏—à—É—Ç')
		else:
			bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
''')


def database(message):
	markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)

	btn1 = types.KeyboardButton("‚ö° –ü—Ä–æ—Ñ–∏–ª—å")
	btn2 = types.KeyboardButton("ü§ë –ü—Ä–æ–¥–∞—Ç—å")
	btn3 = types.KeyboardButton("üí∏ –ö—É–ø–∏—Ç—å")
	btn4 = types.KeyboardButton("‚ù§ –ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏")
	btn5 = types.KeyboardButton("‚õî –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è")

	markup1.add(btn1, btn2, btn3, btn4, btn5)
	with sqlite3.connect('db.db') as db:
		
		cursor = db.cursor()

		data = [
			(message.chat.id, message.chat.username, message.text, )
		]
		
		cursor.executemany("INSERT INTO username(ID, name, city)VALUEs(?, ?, ?)", data)
		info = cursor.fetchone()


		bot.send_message(admin, f"@{message.from_user.username} –ó–∞—Ä–µ–≥–∞–ª—Å—è\n\n{message.from_user.id}")
		bot.reply_to(message, '–£—Å–ø–µ—à–Ω–æ', reply_markup=markup1)


def change(message):

	if message.text == '/cancellation':
		bot.reply_to(message, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ü—Ä–æ—Ñ–∏–ª—è')
	else:
		with sqlite3.connect('db.db') as db:
			cursor = db.cursor()
			cursor.execute("UPDATE username SET city = ? WHERE id=?", (message.text,message.chat.id,))

			bot.reply_to(message, '–ì–æ—Ç–æ–≤–æ!', reply_markup=markup)
			buy(message)


def exit(message):
	bot.reply_to(message, '–í—ã –≤—ã—à–ª–∏')

	send_welcome(message)
def delete(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()
		cursor.execute("SELECT * from vape WHERE productID= ?", (message.text, ))
		chat_id = str(message.chat.id )
		text = str(cursor.fetchone()[1])
		print(f'{text}')


		try:
			if chat_id == text:
				cursor.execute('DELETE FROM vape WHERE ID=? productID=?', (message.chat.id, message.text))

				bot.reply_to(message, f'–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ç–æ–≤–∞—Ä {message.text}')
			if chat_id != text:
				markup = types.InlineKeyboardMarkup()
				button1 = types.InlineKeyboardButton("–£–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–π", callback_data='Del')
				markup.add(button1)


				bot.reply_to(message, f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä —Ç–∫ –æ–Ω –Ω–µ –≤–∞—à!', reply_markup=markup)
		except sqlite3.Error:
			bot.reply_to(message, '–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ!')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	if call.message:
		if call.data == "changecity":
			with sqlite3.connect('db.db') as db:
				cursor = db.cursor()

				msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥')
				print(call.message.chat.id)
				cursor.execute('DELETE FROM username WHERE ID=?', (call.message.chat.id, ))

				bot.register_next_step_handler(msg, database)
		if call.data == 'Del':

			msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–ù–∞–ø–∏—à–∏—Ç–µ Product Id —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è')

			bot.register_next_step_handler(msg, delete)
			bot.message_handler(content_types=['text'])
		if call.data == 'complain':
			complain(call.message)

def complain(message):
	with sqlite3.connect('db.db') as db:
		cursor = db.cursor()

		cursor.execute('SELECT * from userban WHERE ID=?', (message.chat.id, ))
		usrban = cursor.fetchone()

		if usrban is None:
			markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)

			btn1 = types.KeyboardButton("–ù–µ –≤ –Ω–∞–ª–∏—á–∏–∏")
			btn2 = types.KeyboardButton("–ò–º—è –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
			btn3 = types.KeyboardButton("–ù–µ –≤–µ—Ä–Ω—ã–π –≥–æ—Ä–æ–¥")
			btn4 = types.KeyboardButton("–ö–∏–¥–∞–ª–∞")

			markup1.add(btn1, btn2, btn3, btn4)

			msg = bot.reply_to(message, '–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –∞–π–¥–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –æ–ø–∏—à–∏—Ç–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ /cancellation', reply_markup=markup1)

			bot.register_next_step_handler(msg, sendme)

		else:
			bot.reply_to(message, '''
–û–ø—Å—Å—Å—Å—Å, –ø–æ—Ö–æ–¥—É –≤—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–µ–∫–ª–∞–º–∏—Ç—Å—è –≤ –º–æ–µ–º –±–æ—Ç–µ

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â–µ –æ—Ç—Ö–≤–∞—Ç–∏—Ç—å –ø–∏–∑–¥—ã —Ç–æ —Å–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π - @YeahAlin321
''')


def sendme(message):
	if message.text == '/cancellation':
		bot.reply_to(message, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∂–∞–ª–æ–±—É')
	else:
		bot.send_message(admin, message.text)
		bot.reply_to(message, '–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—É–¥–µ—Ç —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∞')

@bot.message_handler()
def allmessage(message):
	if message.text == '‚ùå –í—ã–π—Ç–∏':
		exit(message)
	if message.text == '‚è© –î–∞–ª–µ–µ':
		buy(message)
	if message.text == '‚ö° –ü—Ä–æ—Ñ–∏–ª—å':
		profile(message)
	if message.text == 'üí∏ –ö—É–ø–∏—Ç—å':
		sell(message)
	if message.text == 'ü§ë –ü—Ä–æ–¥–∞—Ç—å':
		sell(message)
	if message.text == '‚ù§ –ú–æ–∏ –ø—Ä–æ–¥–∞–∂–∏':
		mysell(message)
	if message.text == '‚õî –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è':
		complain(message)


if __name__ == '__main__':	
	bot.infinity_polling()